<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:s3="http://www.mulesoft.org/schema/mule/s3"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/current/mule-sqs.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="b30bdc79-aba2-4c64-94c6-32cfba3f8797" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<sqs:config name="Amazon_SQS_Configuration" doc:name="Amazon SQS Configuration" doc:id="2431ce2f-7a8e-471b-b105-f8d99cfa7cdb" >
		<sqs:basic-connection accessKey="AKIAUBCLFDUHR3OG7F5E" secretKey="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" />
	</sqs:config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="7f391da8-11fc-451d-be56-a96c8fc0afd4" >
		<http:request-connection host="localhost" port="8081" />
	</http:request-config>
	<s3:config name="Amazon_S3_Configuration" doc:name="Amazon S3 Configuration" doc:id="d52af2bf-546e-405d-b6cd-b3ecc523780f" >
		<s3:basic-connection accessKey="AKIAUBCLFDUH6W63CZ6X" secretKey="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" region="US_EAST_2"/>
	</s3:config>
	<file:config name="File_Config" doc:name="File Config" doc:id="b731b3fb-efc8-404f-bc8b-fafff7a46dbc" />
	<flow name="aws-s3" doc:id="5e8a42ab-6a50-44de-8d40-13615a010f96" >
		<http:listener doc:name="Listener" doc:id="85f59469-0363-4034-b5a7-ec3520cd9535" config-ref="HTTP_Listener_config" path="/amazons3"/>
		<ee:transform doc:name="base64encoding" doc:id="2528e612-5633-4568-9316-c1b4450c950c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Binaries
---
fromBase64(payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-payload doc:name="image" doc:id="b1d6591f-0175-46b3-9e66-0e462b460d2b" mimeType="image/jpeg" value="payload"/>
		<file:write doc:name="Write_image" doc:id="7569e28d-fdfb-4511-8749-33035499b966" path="C:\Users\siddeshsa\Desktop\idd.jpg" config-ref="File_Config"/>
		<s3:create-object doc:name="Create image in s3" doc:id="ecabeef7-9905-44db-b931-83131e2525d4" config-ref="Amazon_S3_Configuration" bucketName="json-data-sample" key="#['MyFile' ++ (now() as String {format:'yyyy-MM-dd-hh-mm-ss'})++ '.jpg']"/>
	</flow>
	<flow name="device_two" doc:id="6e13950b-b833-47f7-846f-8dd131954e62" >
		<http:listener doc:name="Listener" doc:id="1f60619b-4ae4-4ab1-a3ef-8210c4214fae" config-ref="HTTP_Listener_config" path="/point2"/>
		<logger level="INFO" doc:name="Logger" doc:id="f749cc19-2901-461a-9199-0b3fa31ac7b5" message="calling from device 2"/>
		<http:request method="POST" doc:name="Request" doc:id="b98f240d-83bb-4c30-8ee1-438516e07735" config-ref="HTTP_Request_configuration" path="/sqs"/>
	</flow>
	<flow name="device_one" doc:id="0d8b9c6a-5471-4f8d-b824-3eae9cf247ba" >
		<http:listener doc:name="Listener" doc:id="fd27082d-04c6-47c3-9c2f-856d23a1ca7e" config-ref="HTTP_Listener_config" path="/point1"/>
		<logger level="INFO" doc:name="Logger" doc:id="cf11b961-f3d7-4657-a3a3-8e46a25286b5" message="calling from device 1"/>
		<http:request method="POST" doc:name="Request" doc:id="3b0ff253-c256-4c10-a3bb-0883581fe973" config-ref="HTTP_Request_configuration" path="/sqs"/>
	</flow>
	<flow name="aws-sqsFlow" doc:id="d15d65af-b4ba-4c1f-a1f9-9175867d3288" >
		<http:listener doc:name="Listener" doc:id="3dcef3b8-d4b5-4bcd-a9e3-9afaeb541bd1" path="/sqs" config-ref="HTTP_Listener_config"/>
		<ee:transform doc:name="Transform Message to sqs format" doc:id="37bf70c3-c8b9-4375-b5c8-0dd9365cd8c9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	delaySeconds: 0,
	body: payload,
	messageAttributes: {
		"AccountId": {
			"stringValue" : "000123456",
			"dataType" : "String.AccountId"
		} as Object {
			class: "org.mule.extension.sqs.api.model.MessageAttributeValue"
		},
		"NumberId": {
			"stringValue" : "230.000000000000000001",
			"dataType" : "Number"
		} as Object {
			class : "org.mule.extension.sqs.api.model.MessageAttributeValue"
		}
	} as Object {
		class: "java.util.HashMap"
	}
} as Object {
	class: "org.mule.extension.sqs.api.model.Message"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sqs:send-message doc:name="Send message" doc:id="3f48a485-8fc7-46f7-8f19-407f6e541100" config-ref="Amazon_SQS_Configuration" queueUrl="https://sqs.us-east-2.amazonaws.com/277183012111/testSQS"/>
		<sqs:get-approximate-number-of-messages doc:name="Get approximate number of messages" doc:id="e38b6ffb-6120-4c23-b46f-c6e233ea401b" config-ref="Amazon_SQS_Configuration" queueUrl="https://sqs.us-east-2.amazonaws.com/277183012111/testSQS" />
		<ee:transform doc:name="json" doc:id="b79d89bb-f08b-4eb4-b901-b3fd85dd0ded" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="03f1e4ad-6783-4299-91bf-ab38033d349f" message="#[payload]" />
	</flow>
		<flow name="aws-sqs-reciever" doc:id="64585faa-3746-4d05-88b8-59a6b391816f" >
		<sqs:receivemessages doc:name="Receive messages" doc:id="236a92e4-c90d-4572-9c19-8409031e6700" config-ref="Amazon_SQS_Configuration" queueUrl="https://sqs.us-east-2.amazonaws.com/277183012111/testSQS"/>
		<ee:transform doc:name="json" doc:id="d0b3f5e7-1b04-4e4b-a0c1-9eba94c668c8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="016d02a1-1f2c-492e-974d-c5407434ec5e" message="#[%dw 2.0
&#10;output application/json
&#10;---
&#10;{	severity: &quot;LOW&quot;,
&#10;    eventType: &quot;MulesLogs&quot;,
&#10;    env: &quot;DEV&quot;,
&#10;    messageId: uuid() as String,
&#10;    muleAppName: &quot;policy-demo1&quot;,
&#10;    intgCreationDate: now() as String {format: &quot;yyyy-MM-dd'T'HH:mm:ss.ss'Z'&quot;},
&#10;    payload: write(&quot;Message&quot; : payload ,'application/json'),
&#10;    resultMessage: vars.errorMessage default ' ',
&#10;    result: &quot;Success&quot;,
&#10;    action: &quot;Request received&quot;
&#10; }]"/>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="fce38450-557a-4761-9df7-c6f8261795bf" >
				<logger level="INFO" doc:name="Logger" doc:id="1682cf8c-554d-4d7d-a68e-dbdbc9ed942e" message="#[%dw 2.0
&#10;output application/json
&#10;---
&#10;{
&#10;    severity: &quot;Error&quot;,
&#10;    eventType: &quot;MulesLogs&quot;,
&#10;    env: &quot;DEV&quot;,
&#10;    messageId: uuid() as String,
&#10;    muleAppName: &quot;policy-demo1&quot;,
&#10;    intgCreationDate: now() as String {format: &quot;yyyy-MM-dd'T'HH:mm:ss.ss'Z'&quot;},
&#10;    payload: write(error.detailedDescription,'application/json'),
&#10;    resultMessage: error.detailedDescription default ' ',
&#10;    result: &quot;Error&quot;,
&#10;    action: &quot;Error caught&quot;
&#10;}]"/>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="aws-sqsFlow1" doc:id="276aa328-7cc1-4d0c-af54-89907306bac2" >
		<sqs:receivemessages doc:name="Receive messages" doc:id="2a70af1b-9e0c-4c22-82e6-3a7dc18476a3" config-ref="Amazon_SQS_Configuration" queueUrl="https://sqs.us-east-2.amazonaws.com/277183012111/testSQS"/>
		<ee:transform doc:name="Transform Message" doc:id="d0bde7ea-cad0-48ad-ba0f-9475951cef59" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7671ca0e-3f7d-4fd3-b838-b5828f920299" message='#[payload as String ++ "secondreciver"]'/>
	</flow>
</mule>
